{"version":3,"sources":["components/LoggedInContext.js","config.js","components/ProtectedRoute.js","components/Home.js","components/Login.js","components/ForgotPassword.js","crud.js","components/SignUp.js","components/EditUserModal.js","components/UserCard.js","components/EditUsers.js","components/MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["LoggedInContext","React","createContext","LoggedInProvider","props","useState","users","setUsers","loggedIn","setLoggedIn","token","setToken","Provider","value","checkUser","userName","password","rtnValue","fetch","method","headers","body","JSON","stringify","toLowerCase","then","httpResponse","ok","Error","json","response","console","log","hasOwnProperty","authenticated","catch","error","message","children","LoggedInConsumer","Consumer","ProtectedRoute","Component","component","rest","render","to","Home","useContext","isLoggedIn","Row","Col","Button","variant","map","user","Card","bg","style","width","Title","Subtitle","className","Body","key","username","Login","setUserName","setPassword","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","preventDefault","target","onClick","size","ForgotPassword","endpoint","doc","err","SignUp","createOne","EditUserModal","show","setShow","handleClose","Fragment","Modal","onHide","animation","Header","closeButton","fName","lName","Footer","refresh","UserCard","as","Text","result","EditUsers","setUSers","allUsers","useEffect","_id","MainRouter","path","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24cce64e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { uriBase, apiVer } from '../config'\r\n\r\nconst LoggedInContext = React.createContext()\r\n\r\nfunction LoggedInProvider(props) {\r\n\r\n    let [users, setUsers] = React.useState([])\r\n    let [loggedIn, setLoggedIn] = React.useState(false)\r\n    let [token, setToken] = React.useState(\"\")\r\n\r\n    // create a context for logged in\r\n    const checkUser = (userName, password) => {\r\n\r\n        let rtnValue = false\r\n\r\n        fetch(`${uriBase}/${apiVer}/login`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ userName: userName.toLowerCase(), password })\r\n        })\r\n            .then(httpResponse => {\r\n                if (!httpResponse.ok) {\r\n                    throw new Error(\"Login error\")\r\n                }\r\n                // convert json from endpoint into a js object\r\n                return httpResponse.json()\r\n            })\r\n            .then(response => {\r\n                console.log(response)\r\n\r\n                if (response.hasOwnProperty('authenticated')) {\r\n\r\n                    setLoggedIn(response.authenticated)\r\n\r\n                    if (response.authenticated === true) {\r\n                        setToken(response.token)\r\n                    }\r\n                    rtnValue = response.authenticated\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            })\r\n\r\n        return rtnValue\r\n\r\n    }\r\n\r\n    return (\r\n        <LoggedInContext.Provider value={{ users, loggedIn, checkUser, setUsers, token }}>\r\n            {props.children}\r\n        </LoggedInContext.Provider>\r\n    )\r\n\r\n}\r\nconst LoggedInConsumer = LoggedInContext.Consumer\r\nexport { LoggedInContext, LoggedInProvider, LoggedInConsumer }","// configure our api endpoints\r\nconst uriBase = (process.env.NODE_ENV !== \"production\" ? (\r\n    \"http://localhost:3000\"\r\n) : (\r\n        \"\"\r\n    )\r\n)\r\n\r\nconst apiVer = \"api/v1\"\r\n\r\nexport {uriBase, apiVer}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { LoggedInConsumer } from './LoggedInContext'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n        \r\n        <LoggedInConsumer>\r\n            {\r\n                ({ loggedIn }) => (\r\n                    <Route\r\n                        render={props =>\r\n                            loggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n                        }\r\n                        {...rest}\r\n                    />\r\n                )\r\n            }\r\n        </LoggedInConsumer>\r\n\r\n    )\r\n}\r\nexport default ProtectedRoute;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Button, Row, Col } from 'react-bootstrap'\r\nimport { LoggedInContext } from \"./LoggedInContext\"\r\n\r\nexport default function Home(props) {\r\n\r\n    let {users, loggedIn} = React.useContext(LoggedInContext)\r\n\r\n    const isLoggedIn = () => {\r\n            \r\n        if (loggedIn) {\r\n            return (<h3>Logged in!</h3>)\r\n        } else {\r\n            return (<h3>Not logged in</h3>)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome to the Home Page</h1>\r\n            {\r\n                isLoggedIn()\r\n            }\r\n            <br></br>\r\n            <Row>\r\n                <Col><h2>Brief description.</h2>\r\n                <p>here i have created some links to the other pages for the website and have\r\n                    added this side text for a small description and practice.</p>\r\n                    <br></br>\r\n                    <h3>Steps to create user.</h3>\r\n                    <li>get signed up</li>\r\n                    <li>select log in</li>\r\n                    <li>if needing to edit user first log in then \r\n                        with admin controls, delete users.\r\n                    </li>\r\n                </Col>\r\n                <Col>\r\n            <Button variant=\"outline-dark\">\r\n                <Link to=\"/Login\"><h3>Login Page</h3></Link>\r\n            </Button>\r\n            <br></br>\r\n            <br></br>\r\n            <Button variant=\"outline-dark\">\r\n                <Link to=\"/ForgotPassword\"><h3>Forgot Password</h3></Link>\r\n            </Button>\r\n            <br></br>\r\n            <br></br>\r\n            <Button variant=\"outline-dark\" >\r\n                <Link to=\"/SignUp\"><h3>Sign Up</h3></Link>\r\n            </Button>\r\n            <br></br>\r\n            <br></br>\r\n            <Button variant=\"outline-dark\" >\r\n                <Link to=\"/admin\"><h3>Edit Users</h3></Link>\r\n                {isLoggedIn()}\r\n            </Button>\r\n            </Col>\r\n            <Col>\r\n            <h2>More info..</h2>\r\n            <p>for more information please refer to www.whatsarandomwebsitewithinfocalledagain.com.\r\n                or give us a call at 666... yep thats the number. and for help online with question well your out of luck,\r\n                our online support is non existant. have a nice day!\r\n            </p>\r\n            </Col>\r\n            </Row>\r\n            {\r\n                users.map(user => {\r\n                    return <Card bg=\"info\" style={{ width: '18rem' }}>\r\n                        <Card.Title>Wizard</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">Username</Card.Subtitle>\r\n                        <Card.Body key={user.username}>{user.username}</Card.Body>\r\n                    </Card>\r\n                })\r\n            }\r\n            <br></br>\r\n            <Row>\r\n                <Col>\r\n                    <Button variant=\"primary\">Facebook</Button>\r\n                </Col>\r\n                <br></br>\r\n                <br></br>\r\n                <Col>\r\n                    <Button variant=\"success\">Amazon</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { LoggedInContext } from \"./LoggedInContext\"\r\n\r\nexport default function Login(props) {\r\n\r\n    let [username, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    // context\r\n    let {checkUser, loggedIn} = React.useContext(LoggedInContext)\r\n    const usernameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n        \r\n        // check to see if user exist\r\n        checkUser(username, password)\r\n        // if exists check password\r\n\r\n        // display result\r\n    }\r\n\r\n    const isLoggedIn = () => {\r\n            \r\n        if (loggedIn) {\r\n            return (<h3>Logged in!</h3>)\r\n        } else {\r\n            return (<h3>Not logged in</h3>)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <h1>Login Page</h1>\r\n            {\r\n                isLoggedIn()\r\n            }\r\n            <br></br>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"LoginUsername\">\r\n                            <Form.Label><h2>Username</h2></Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={usernameOnChangeHandler} value={username}\r\n                                style={{ width: '30rem' }} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"LoginPassword\">\r\n                            <Form.Label><h2>Password</h2></Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password}\r\n                                style={{ width: '30rem' }} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"outline-success\" type=\"submit\" onClick={submitOnClickHandler} size=\"lg\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to=\"/Home\">Home Page</Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\nimport { uriBase, apiVer } from '../config'\r\nimport { patchOne } from '../crud'\r\nimport { LoggedInContext } from \"./LoggedInContext\"\r\n\r\n\r\nexport default function ForgotPassword(props) {\r\n\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n    let { loggedIn } = React.useContext(LoggedInContext)\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n        // check to see if user exist\r\n        try {\r\n            patchOne(`${uriBase}/${apiVer}/users/${userName}`, {password})\r\n            console.log(\"Patched\")  \r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n        // if exists update password\r\n\r\n        // display result\r\n    }\r\n\r\n    const isLoggedIn = () => {\r\n\r\n        if (loggedIn) {\r\n            return (<h3>Logged in!</h3>)\r\n        } else {\r\n            return (<h3>Not logged in</h3>)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <h1>Forgot Password</h1>\r\n            {\r\n                isLoggedIn()\r\n            }\r\n            <br></br>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"forgotPassUsername\">\r\n                            <Form.Label><h2>Username</h2></Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={usernameOnChangeHandler} value={userName}\r\n                                style={{ width: '30rem' }} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"forgotPassPassword\">\r\n                            <Form.Label><h2>New Password</h2></Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"New Password\" onChange={passwordOnChangeHandler} value={password}\r\n                                style={{ width: '30rem' }} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"outline-success\" type=\"submit\" onClick={submitOnClickHandler} size=\"lg\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to=\"/Home\">Home Page</Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","// this file handles the api calls to our backend\r\n// functions require an api endpoint a token and a doc\r\n\r\n\r\n// create a record\r\nconst createOne = (endpoint, token, doc) => {\r\n\r\n    console.log(doc)\r\n    return fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n    .then(httpResponse => {\r\n        if (!httpResponse.ok) {\r\n            throw new Error(`Error with POST at ${endpoint}`)\r\n        }\r\n        return httpResponse.json()\r\n    })\r\n    .catch(err => {\r\n        throw err\r\n    })\r\n}\r\n\r\n// get all\r\nconst getAll = (endpoint) => {\r\n\r\n\r\n    return fetch(endpoint, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(httpResponse => {\r\n\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with GET at ${endpoint}`)\r\n            }\r\n            return httpResponse.json()\r\n\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n// get one\r\nconst getOne = () => {\r\n\r\n}\r\n// patch one\r\nconst patchOne = (endpoint, doc) => {\r\n\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n        .then(httpResponse => {\r\n\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with PATCH at ${endpoint}`)\r\n            }\r\n            return httpResponse.json()\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n// update one\r\nconst updateOne = (endpoint, doc) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n        .then(httpResponse => {\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with PUT at ${endpoint}`)\r\n            }\r\n            return httpResponse.json()\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n\r\n}\r\n// delete one\r\nconst deleteOne = (endpoint) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(httpResponse => {\r\n\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with DELETE at ${endpoint}`)\r\n            }\r\n            return httpResponse.json()\r\n\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n\r\nexport { createOne, getAll, getOne, updateOne, patchOne, deleteOne }","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { createOne } from '../crud'\r\nimport { uriBase, apiVer } from '../config'\r\nimport { LoggedInContext } from './LoggedInContext'\r\n\r\nexport default function SignUp(props) {\r\n\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    let { token } = useContext(LoggedInContext)\r\n    const userNameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            createOne(`${uriBase}/${apiVer}/users`, token, { userName, password })\r\n            console.log(\"added\")\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Sign Up</h1>\r\n            <br></br>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"signUpUsername\">\r\n                            <Form.Label ><h2>Username</h2></Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={userNameOnChangeHandler} value={userName}\r\n                                style={{ width: '30rem' }} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"signUpPassword\">\r\n                            <Form.Label><h2>Password</h2></Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password}\r\n                                style={{ width: '30rem' }} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"outline-success\" type=\"submit\" onClick={submitOnClickHandler} size=\"lg\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <br></br>\r\n\r\n            <br></br>\r\n            <Link to=\"/Home\">Home Page</Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { updateOne } from '../crud'\r\nimport { uriBase, apiVer } from '../config'\r\n\r\nconst EditUserModal = (props) => {\r\n\r\n    const [userName, setUserName] = useState(props.user.userName)\r\n    const [show, setShow] = useState(false);\r\n    const [password, setPassword] = useState(props.user.password)\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const userNameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const saveOnClickHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n        try {\r\n            updateOne(`${uriBase}/${apiVer}/users/${props.user.userName}`, { userName, password })\r\n            console.log(\"Updated!\")\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n        setShow(false)\r\n        props.refresh()\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"primary\" size=\"sm\" onClick={handleShow}>Update</Button>\r\n\r\n            <Modal show={show} onHide={handleClose} animation={false}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title><h2>EDIT {props.user.fName} {props.user.lName}</h2></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"editUserModalUserName\">\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={userNameOnChangeHandler} value={userName}\r\n                                style={{ width: '20rem' }} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"editUserModalUserName\">\r\n                            <Form.Control type=\"password\" placeholder=\"New Password\" onChange={passwordOnChangeHandler}\r\n                                style={{ width: 'auto' }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={saveOnClickHandler}>\r\n                        Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditUserModal;","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport { deleteOne } from '../crud'\r\nimport { uriBase, apiVer } from '../config'\r\nimport EditUserModal from './EditUserModal';\r\n\r\nconst UserCard = (props) => {\r\n\r\n    const deleteOnClickHandler = (event) => {\r\n\r\n        deleteOne(`${uriBase}/${apiVer}/users/${props.user.userName}`, props.user)\r\n            .then(result => {\r\n                props.refresh()\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card bg=\"info\" style={{ width: '18rem' }}>\r\n                <Card.Header as=\"h5\">User name</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>{props.user.userName}</Card.Title>\r\n                    <Card.Text>\r\n                        {`${props.user.userName}`}\r\n                    </Card.Text>\r\n                    <EditUserModal user={props.user} refresh={props.refresh}>\r\n                        <Button variant=\"primary\" size=\"sm\">Update</Button>\r\n                    </EditUserModal>\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={deleteOnClickHandler}>Delete</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserCard;","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {getAll} from '../crud'\r\nimport {uriBase, apiVer} from '../config'\r\nimport UserCard from  './UserCard'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nconst EditUsers = (props) => {\r\n     \r\n    const [users, setUSers] = useState([])\r\n\r\n    const refresh = () => {\r\n\r\n        getAll(`${uriBase}/${apiVer}/users`)\r\n        .then(allUsers => {\r\n            setUSers(allUsers)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    useEffect( () => {\r\n        refresh()\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <h2>EDIT USERS</h2>\r\n            <br></br>\r\n            <Row>\r\n            {\r\n                users.map( user => {\r\n                    return <UserCard key={user._id} user={user} refresh={refresh}></UserCard>\r\n                })\r\n            }\r\n            </Row>\r\n            <br></br>\r\n            <Link to=\"/Home\">Home Page</Link>\r\n            <br></br>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUsers;\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { LoggedInProvider } from \"./LoggedInContext\"\r\nimport ProtectedRoute from \"./ProtectedRoute\"\r\n    \r\nimport Home from './Home'\r\nimport Login from './Login'\r\nimport ForgotPassword from './ForgotPassword'\r\nimport SignUp from './SignUp'\r\nimport EditUsers from './EditUsers'\r\n\r\n\r\nexport default function MainRouter() {\r\n\r\n    return (\r\n        <LoggedInProvider>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/signUp\" component={SignUp}></Route>\r\n                    <Route path=\"/forgotpassword\" component={ForgotPassword}></Route>\r\n                    <Route path=\"/login\" component={Login}></Route>\r\n                    <ProtectedRoute path=\"/admin\" component={EditUsers}/>\r\n                    <Route path=\"/\" component={Home}></Route>   \r\n                </Switch>\r\n            </Router>\r\n        </LoggedInProvider>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport MainRouter from './components/MainRouter'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <MainRouter></MainRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}